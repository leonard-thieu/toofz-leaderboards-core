//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace toofz.NecroDancer.Leaderboards.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("toofz.NecroDancer.Leaderboards.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;rows_affected&quot;: 10
        ///}.
        /// </summary>
        internal static string BulkStoreDTO {
            get {
                return ResourceManager.GetString("BulkStoreDTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;access_token&quot;: &quot;myAccessToken&quot;,
        ///  &quot;token_type&quot;: &quot;bearer&quot;,
        ///  &quot;expires_in&quot;: 3599,
        ///  &quot;userName&quot;: &quot;myUserName&quot;,
        ///  &quot;.issued&quot;: &quot;Wed, 13 Sep 2017 18:29:56 GMT&quot;,
        ///  &quot;.expires&quot;: &quot;Wed, 13 Sep 2017 19:29:56 GMT&quot;
        ///}.
        /// </summary>
        internal static string OAuth2AccessToken {
            get {
                return ResourceManager.GetString("OAuth2AccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 453681,
        ///  &quot;players&quot;: [
        ///    {
        ///      &quot;id&quot;: &quot;76561198020278823&quot;,
        ///      &quot;display_name&quot;: &quot;Mr.moneybottoms&quot;,
        ///      &quot;updated_at&quot;: &quot;2017-09-13T12:48:01.35Z&quot;,
        ///      &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/cb/cb555a66da219db0dd0504b69ccbd810678fe203.jpg&quot;
        ///    },
        ///    {
        ///      &quot;id&quot;: &quot;76561198020279203&quot;,
        ///      &quot;display_name&quot;: &quot;srslycirce&quot;,
        ///      &quot;updated_at&quot;: &quot;2017-09-13T12:48:01.35Z&quot;,
        ///      &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PlayersEnvelope {
            get {
                return ResourceManager.GetString("PlayersEnvelope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;response&quot;: {
        ///    &quot;players&quot;: [
        ///      {
        ///        &quot;steamid&quot;: &quot;76561197960435530&quot;,
        ///        &quot;communityvisibilitystate&quot;: 3,
        ///        &quot;profilestate&quot;: 1,
        ///        &quot;personaname&quot;: &quot;Robin&quot;,
        ///        &quot;lastlogoff&quot;: 1501731437,
        ///        &quot;profileurl&quot;: &quot;http://steamcommunity.com/id/robinwalker/&quot;,
        ///        &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/f1/f1dd60a188883caf82d0cbfccfe6aba0af1732d4.jpg&quot;,
        ///        &quot;avatarmedium&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/im [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PlayerSummaries {
            get {
                return ResourceManager.GetString("PlayerSummaries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 43767,
        ///  &quot;replays&quot;: [
        ///    {
        ///      &quot;id&quot;: &quot;844845073340377377&quot;,
        ///      &quot;error&quot;: null,
        ///      &quot;seed&quot;: null,
        ///      &quot;version&quot;: null,
        ///      &quot;killed_by&quot;: null
        ///    },
        ///    {
        ///      &quot;id&quot;: &quot;844845073340436306&quot;,
        ///      &quot;error&quot;: null,
        ///      &quot;seed&quot;: null,
        ///      &quot;version&quot;: null,
        ///      &quot;killed_by&quot;: null
        ///    },
        ///    {
        ///      &quot;id&quot;: &quot;844845073340472702&quot;,
        ///      &quot;error&quot;: null,
        ///      &quot;seed&quot;: null,
        ///      &quot;version&quot;: null,
        ///      &quot;killed_by&quot;: null
        ///    },
        ///    {
        ///      &quot;id&quot;: &quot;844845073340489317&quot;,
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReplaysEnvelope {
            get {
                return ResourceManager.GetString("ReplaysEnvelope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;response&quot;: {
        ///		&quot;players&quot;: [
        ///			{
        ///				&quot;steamid&quot;: &quot;76561198000971575&quot;,
        ///				&quot;communityvisibilitystate&quot;: 3,
        ///				&quot;profilestate&quot;: 1,
        ///				&quot;personaname&quot;: &quot;TheFaceless&quot;,
        ///				&quot;lastlogoff&quot;: 1505533192,
        ///				&quot;commentpermission&quot;: 1,
        ///				&quot;profileurl&quot;: &quot;http://steamcommunity.com/profiles/76561198000971575/&quot;,
        ///				&quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/ee/ee5a1c8fdc1939ff4d83ed2d36ad279766a367a5.jpg&quot;,
        ///				&quot;avatarmedium&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/image [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StarWarsEncoding {
            get {
                return ResourceManager.GetString("StarWarsEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BROWN DIREBAT%*#%*24\n1\n0\n0\n1\n1\n0\n1\n107608\n2\n1006686362\n1\n512\n337\n170\n0|170|2:2,4:2,6:2,8:2,10:2,12:3,14:3,16:3,18:3,20:3,22:3,24:3,26:2,28:3,30:0,32:3,34:2,36:3,38:3,40:2,42:0,44:2,46:0,48:0,50:0,52:0,54:3,56:3,58:2,60:3,62:2,64:1,66:3,68:3,70:3,72:2,74:2,76:2,78:2,80:0,82:3,84:3,86:0,88:0,90:3,92:3,94:1,96:1,98:1,100:1,102:1,104:1,106:1,108:1,110:1,112:1,114:1,116:1,118:1,120:1,122:2,124:1,126:1,128:2,130:0,132:2,134:0,136:2,138:2,140:2,142:2,144:2,146:2,148:2,150:1,152:2,154:1,156:1,158:1,1 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UgcFile {
            get {
                return ResourceManager.GetString("UgcFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;data&quot;: {
        ///    &quot;filename&quot;: &quot;2/9/2014_score191_zone1_level2&quot;,
        ///    &quot;url&quot;: &quot;http://cloud-3.steamusercontent.com/ugc/22837952671856412/756063F4E07B686916257652BBEB972C3C9E6F8D/&quot;,
        ///    &quot;size&quot;: 1558
        ///  }
        ///}.
        /// </summary>
        internal static string UgcFileDetails {
            get {
                return ResourceManager.GetString("UgcFileDetails", resourceCulture);
            }
        }
    }
}
